{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inicio","text":"<p>Biblioteca Java para consumo do WebService de NFe/NFCe</p>"},{"location":"#duvidas-sugestoes-ou-consultoria","title":"D\u00favidas, Sugest\u00f5es ou Consultoria","text":""},{"location":"#entre-no-discord-do-projeto-httpsdiscordggzxpqnav","title":"Entre no Discord do Projeto: https://discord.gg/ZXpqnaV","text":""},{"location":"#gostou-do-projeto-de-sua-colaboracao-pelo-pix-01713390108","title":"Gostou do Projeto? D\u00ea sua colabora\u00e7\u00e3o pelo Pix: 01713390108","text":"<p>Para Iniciar :  - Caso use Libs baixe o java-nfe-4.00.25.jar e o adicione \u00e0s bibliotecas de Seu Projeto.</p> <ul> <li> <p>Baixe o Schemas.rar e extraia na sua M\u00e1quina.</p> </li> <li> <p>Maven : <pre><code>&lt;dependency&gt;\n&lt;groupId&gt;br.com.swconsultoria&lt;/groupId&gt;\n&lt;artifactId&gt;java-nfe&lt;/artifactId&gt;\n&lt;version&gt;4.00.25&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre></p> </li> <li> <p>Gradle : <pre><code>repositories {\nmaven { url = \"https://oss.sonatype.org/content/repositories/snapshots\" }\n}\ndependencies {\nimplementation \"br.com.swconsultoria:java-nfe:4.00.25\"\n}\n</code></pre></p> </li> </ul>"},{"location":"tutorial/baixar-documento/","title":"Baixar Documento (DistDfe)","text":"<p>Fun\u00e7\u00e3o para consulta/baixa de NF-e na Sefaz.</p>"},{"location":"tutorial/baixar-documento/#exemplo-de-consulta-via-nsu-e-chave-de-acesso","title":"Exemplo de consulta via NSU e Chave de Acesso:","text":"DistribuicaoDFeTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.*;\nimport br.com.swconsultoria.nfe.schema.retdistdfeint.RetDistDFeInt;\nimport br.com.swconsultoria.nfe.schema.retdistdfeint.RetDistDFeInt.LoteDistDFeInt.DocZip;\nimport br.com.swconsultoria.nfe.util.XmlNfeUtil;\nimport java.util.List;\n/**\n * @author Samuel Oliveira\n *\n */\npublic class DistribuicaoDFeTeste {\npublic static void main(String[] args) {\ntry {\n// Inicia As Configura\u00e7\u00f5es (1)\nURI uri = Objects.requireNonNull(DistribuicaoDFeTeste.class.getClassLoader().getResource(\"arquivo-certificado.pfx\")).toURI();            Certificado certificado = CertificadoService.certificadoPfx(Paths.get(file.toURI()).toString(), \"senha-do-seu-certificado\");\nConfiguracoesNfe configuracoesNfe = ConfiguracoesNfe.criarConfiguracoes(EstadosEnum.PR, AmbienteEnum.HOMOLOGACAO, certificado, \"\");\n// Informe o CNPJ Do Destinatario (Deve ser o Mesmo do Certificado)\nString cnpj = \"XXX\";\nRetDistDFeInt retorno;\n// Para Consulta Via CHAVE\n// String chave = \"35170843283811001202550010046314601229130549\";\n// retorno = Nfe.distribuicaoDfe(configuracoesNfe, PessoaEnum.JURIDICA, cnpj, ConsultaDFeEnum.CHAVE, chave);\n// Para Consulta Via NSU\nString nsu = \"000000000000000\";\nretorno = Nfe.distribuicaoDfe(config, PessoaEnum.JURIDICA, cnpj, ConsultaDFeEnum.NSU, nsu);\nif (StatusEnum.DOC_LOCALIZADO_PARA_DESTINATARIO.getCodigo().equals(retorno.getCStat())) {\nSystem.out.println();\nSystem.out.println(\"# Status: \" + retorno.getCStat() + \" - \" + retorno.getXMotivo());\nSystem.out.println(\"# NSU Atual: \" + retorno.getUltNSU());\nSystem.out.println(\"# Max NSU: \" + retorno.getMaxNSU());\nSystem.out.println(\"# Max NSU: \" + retorno.getMaxNSU());\n//Aqui Recebe a Lista De XML (No Maximo 50 por Consulta)\nList&lt;DocZip&gt; listaDoc = retorno.getLoteDistDFeInt().getDocZip();\nfor (DocZip docZip : listaDoc) {\nSystem.out.println();\nSystem.out.println(\"# Schema: \" + docZip.getSchema());\nswitch (docZip.getSchema()) {\ncase \"resNFe_v1.01.xsd\":\nSystem.out.println(\"# Este \u00e9 o XML em resumo, deve ser feito a Manifesta\u00e7\u00e3o para o Objeter o XML Completo.\");\nbreak;\ncase \"procNFe_v4.00.xsd\":\nSystem.out.println(\"# XML Completo.\");\nbreak;\ncase \"procEventoNFe_v1.00.xsd\":\nSystem.out.println(\"# XML Evento.\");\nbreak;\n}\n//Transforma o GZip em XML\nString xml = XmlNfeUtil.gZipToXml(docZip.getValue());\nSystem.out.println(\"# XML: \" + xml);\n}\n} else {\nSystem.out.println();\nSystem.out.println(\"# Status: \" + retorno.getCStat() + \" - \" + retorno.getXMotivo());\n}\n} catch (Exception e) {\nSystem.err.println();\nSystem.err.println(\"# Erro: \"+e.getMessage());\n}\n}\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/cancelamento/","title":"Cancelamento","text":"<p>Fun\u00e7\u00e3o para Cancelar a NFe/NFCe.</p>"},{"location":"tutorial/cancelamento/#cancelar-nfenfce","title":"Cancelar NFe/NFCe.","text":"CancelarTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.Evento;\nimport br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;\nimport br.com.swconsultoria.nfe.schema.envEventoCancNFe.TEnvEvento;\nimport br.com.swconsultoria.nfe.schema.envEventoCancNFe.TRetEnvEvento;\nimport br.com.swconsultoria.nfe.util.CancelamentoUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\nimport java.time.LocalDateTime;\n/**\n * @author Samuel Oliveira\n */\npublic class CancelarTeste {\npublic static void main(String[] args) {\ntry {\n// Inicia As Configura\u00e7\u00f5es (1)\nConfiguracoesNfe config = Config.iniciaConfiguracoes();\n//Agora o evento pode aceitar uma lista de cancelaemntos para envio em Lote.\n//Para isso Foi criado o Objeto Cancela\nEvento cancela = new Evento();\n//Informe a chave da Nota a ser Cancelada\ncancela.setChave(\"XXX\");\n//Informe o protocolo da Nota a ser Cancelada\ncancela.setProtocolo(\"XXX\");\n//Informe o CNPJ do emitente\ncancela.setCnpj(\"XXX\");\n//Informe o Motivo do Cancelamento\ncancela.setMotivo(\"Teste de Cancelamento\");\n//Informe a data do Cancelamento\ncancela.setDataEvento(LocalDateTime.now());\n//Monta o Evento de Cancelamento\nTEnvEvento enviEvento = CancelamentoUtil.montaCancelamento(cancela, config);\n//Envia o Evento de Cancelamento\nTRetEnvEvento retorno = Nfe.cancelarNfe(config, enviEvento, true, DocumentoEnum.NFE);\n//Valida o Retorno do Cancelamento\nRetornoUtil.validaCancelamento(retorno);\n//Resultado\nSystem.out.println();\nretorno.getRetEvento().forEach( resultado -&gt; {\nSystem.out.println(\"# Chave: \" + resultado.getInfEvento().getChNFe());\nSystem.out.println(\"# Status: \" + resultado.getInfEvento().getCStat() + \" - \" + resultado.getInfEvento().getXMotivo());\nSystem.out.println(\"# Protocolo: \" + resultado.getInfEvento().getNProt());\n});\n//Cria ProcEvento de Cacnelamento\nString proc = CancelamentoUtil.criaProcEventoCancelamento(config, enviEvento, retorno.getRetEvento().get(0));\nSystem.out.println();\nSystem.out.println(\"# ProcEvento : \" + proc);\n} catch (Exception e) {\nSystem.err.println();\nSystem.err.println(\"# Erro: \"+e.getMessage());\n}\n}\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/cancelamento/#cancelamento-substituicao-nfce","title":"Cancelamento Substitui\u00e7\u00e3o (NFCe)","text":"CancelarTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.Evento;\nimport br.com.swconsultoria.nfe.schema.envEventoCancSubst.TEnvEvento;\nimport br.com.swconsultoria.nfe.schema.envEventoCancSubst.TRetEnvEvento;\nimport br.com.swconsultoria.nfe.util.CancelamentoSubstituicaoUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\nimport java.time.LocalDateTime;\n/**\n * @author Samuel Oliveira\n */\npublic class CancelarSubstituicaoTeste {\npublic static void main(String[] args) {\ntry {\n// Inicia As Configura\u00e7\u00f5es (1)\nConfiguracoesNfe config = Config.iniciaConfiguracoes();\n//Agora o evento pode aceitar uma lista de cancelaemntos para envio em Lote.\n//Para isso Foi criado o Objeto Cancela\nEvento cancela = new Evento();\n//Informe a chave da Nota a ser Cancelada\ncancela.setChave(\"XXX\");\n//Informe a chave da Nota a Substituta\ncancela.setChaveSusbstituta(\"XXX\");\n//Informe o protocolo da Nota a ser Cancelada\ncancela.setProtocolo(\"XXX\");\n//Informe o CNPJ do emitente\ncancela.setCnpj(\"XXX\");\n//Informe o Motivo do Cancelamento\ncancela.setMotivo(\"Teste de Cancelamento\");\n//Informe a data do Cancelamento\ncancela.setDataEvento(LocalDateTime.now());\n//Monta o Evento de Cancelamento\nTEnvEvento enviEvento = CancelamentoSubstituicaoUtil.montaCancelamento(cancela, config);\n//Envia o Evento de Cancelamento\nTRetEnvEvento retorno = Nfe.cancelarSubstituicaoNfe(config, enviEvento, true);\n//Valida o Retorno do Cancelamento\nRetornoUtil.validaCancelamentoSubstituicao(retorno);\n//Resultado\nSystem.out.println();\nretorno.getRetEvento().forEach( resultado -&gt; {\nSystem.out.println(\"# Chave: \" + resultado.getInfEvento().getChNFe());\nSystem.out.println(\"# Status: \" + resultado.getInfEvento().getCStat() + \" - \" + resultado.getInfEvento().getXMotivo());\nSystem.out.println(\"# Protocolo: \" + resultado.getInfEvento().getNProt());\n});\n//Cria ProcEvento de Cacnelamento\nString proc = CancelamentoSubstituicaoUtil.criaProcEventoCancelamento(config, enviEvento, retorno.getRetEvento().get(0));\nSystem.out.println();\nSystem.out.println(\"# ProcEvento : \" + proc);\n} catch (Exception e) {\nSystem.err.println();\nSystem.err.println(\"# Erro: \"+e.getMessage());\n}\n}\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/cce/","title":"Carta de Corre\u00e7\u00e3o Eletr\u00f4nica","text":"<p>Fun\u00e7\u00e3o para Gerar a Carta De Corre\u00e7\u00e3o Eletr\u00f4nica.</p>"},{"location":"tutorial/cce/#envio","title":"Envio","text":"CartaCorrecaoTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.Evento;\nimport br.com.swconsultoria.nfe.schema.envcce.TEnvEvento;\nimport br.com.swconsultoria.nfe.schema.envcce.TRetEnvEvento;\nimport br.com.swconsultoria.nfe.util.CartaCorrecaoUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\nimport java.time.LocalDateTime;\n/**\n * @author Samuel Oliveira\n *\n */\npublic class CartaCorrecaoTeste {\npublic static void main(String[] args) {\ntry {\n// Inicia As Configura\u00e7\u00f5es (1)\nConfiguracoesNfe config = Config.iniciaConfiguracoes();\n//Agora o evento pode aceitar uma lista de cancelaemntos para envio em Lote.\n//Para isso Foi criado o Objeto Cancela\nEvento cce = new Evento();\n//Informe a chave da Nota a ser feita a CArta de Corre\u00e7\u00e3o\ncce.setChave(\"XXX\");\n//Informe o CNPJ do emitente\ncce.setCnpj(\"XXX\");\n//Informe o Texto da Carta de Corre\u00e7\u00e3o\ncce.setMotivo(\"Teste de Carta de Corre\u00e7\u00e3o\");\n//Informe a data da Carta de Corre\u00e7\u00e3o\ncce.setDataEvento(LocalDateTime.now());\n//Informe a sequencia do Evento\ncce.setSequencia(1);\n// Monta o Evento\nTEnvEvento envEvento = CartaCorrecaoUtil.montaCCe(cce,config);\n//Envia a CCe\nTRetEnvEvento retorno = Nfe.cce(config, envEvento, true);\n//Valida o Retorno do Carta de Corre\u00e7\u00e3o\nRetornoUtil.validaCartaCorrecao(retorno);\n//Resultado\nSystem.out.println();\nretorno.getRetEvento().forEach( resultado -&gt; {\nSystem.out.println(\"# Chave: \" + resultado.getInfEvento().getChNFe());\nSystem.out.println(\"# Status: \" + resultado.getInfEvento().getCStat() + \" - \" + resultado.getInfEvento().getXMotivo());\nSystem.out.println(\"# Protocolo: \" + resultado.getInfEvento().getNProt());\n});\n//Cria ProcEvento da CCe\nString proc = CartaCorrecaoUtil.criaProcEventoCCe(config, envEvento, retorno);\nSystem.out.println();\nSystem.out.println(\"# ProcEvento : \" + proc);\n} catch (Exception e) {\nSystem.err.println();\nSystem.err.println(e.getMessage());\n}\n}\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/configuracoes/","title":"Configura\u00e7\u00f5es","text":"<p>Para executar qualquer fun\u00e7\u00e3o NFe/NFCe, deve-se inicializar as Configura\u00e7\u00e3o.</p>"},{"location":"tutorial/configuracoes/#certificado-digital","title":"Certificado Digital","text":"<pre><code>import br.com.swconsultoria.nfe.dom.enuns.EstadosEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.AmbienteEnum;\npublic ConfiguracoesNfe iniciaConfigura\u00e7\u00f5es() throws NfeException {\nCertificado certificado = // Obter certificado (1)\nreturn ConfiguracoesNfe.criarConfiguracoes(\nEstadosEnum.GO, // (2)\nAmbienteEnum.HOMOLOGACAO, // (3)\ncertificado, \"C:\\\\SRA\\\\Nfe\\\\Schemas\" // (4)\n);\n}\n</code></pre> <ol> <li>Para obter o c\u00f3digo de uso do certificado, voc\u00ea deve acessar em Java_Certificado</li> <li>Obtendo estado a partir de String EstadosEnum.valueOf(\"GO\")</li> <li>Obtendo ambiente a partir de String AmbienteEnum.getByCodigo(\"2\")</li> <li>Caminho da pasta que se encontra os Schemas Xsd</li> </ol>"},{"location":"tutorial/configuracoes/#proxy","title":"Proxy","text":"<p>Para Habilitar o Proxy, ao iniciar as configura\u00e7\u00f5es Adicione as Seguintes Linhas:</p> <pre><code>public static ConfiguracoesIniciaisNfe iniciaConfigura\u00e7\u00f5es() throws NfeException {\n// Certificado Arquivo, Parametros: -Caminho Certificado, - Senha\nCertificado certificado = CertificadoService.certificadoPfx(\"c:/certificado/certificado.pfx\", \"123456\");\nConfiguracoesIniciaisNfe config = ConfiguracoesIniciaisNfe.iniciaConfiguracoes(Estados.GO , ConstantesUtil.AMBIENTE.HOMOLOGACAO,certificado, \"C:\\\\SRA\\\\Nfe\\\\Schemas\");\nString ip = \"192.168.0.1\";\nString porta = \"3128\";\nString usuario = \"\";\nString senha = \"\";\nconfig.setProxy(ip, porta, usuario , senha);\nreturn config;\n}\n</code></pre>"},{"location":"tutorial/configuracoes/#contingencia-scan","title":"Conting\u00eancia Scan","text":"<p>Para Trabalhar com Conting\u00eancia Scan, ap\u00f3s iniciar as Configura\u00e7\u00f5es Set a Propriedade como True:</p> <pre><code>public static ConfiguracoesIniciaisNfe iniciaConfigura\u00e7\u00f5es() throws NfeException {\n// Certificado Arquivo, Parametros: -Caminho Certificado, - Senha\nCertificado certificado = CertificadoService.certificadoPfx(\n\"c:/certificado/certificado.pfx\", \"123456\"\n);\nConfiguracoesIniciaisNfe config = ConfiguracoesIniciaisNfe.iniciaConfiguracoes(\nEstados.GO, ConstantesUtil.AMBIENTE.HOMOLOGACAO,\ncertificado, \"C:\\\\SRA\\\\Nfe\\\\Schemas\"\n);\nconfig.setContigenciaSCAN(true);\nreturn config;\n}\n</code></pre>"},{"location":"tutorial/consulta-cadastro/","title":"Consulta Cadastro","text":"<p>Fun\u00e7\u00e3o para Consultar o Cadastro do Contribuinte na Sefaz.</p>"},{"location":"tutorial/consulta-cadastro/#consulta-cadastro_1","title":"Consulta Cadastro","text":"ConsultaCadastroTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.EstadosEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.PessoaEnum;\nimport br.com.swconsultoria.nfe.schema.retConsCad.TRetConsCad;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\n/**\n * @author Samuel Oliveira\n *\n */\npublic class ConsultaCadastroTeste {\npublic static void main(String[] args) {\ntry {\n// Inicia As Configura\u00e7\u00f5es (1)\nConfiguracoesNfe config = Config.iniciaConfiguracoes();\n//Envia a Consulta\nTRetConsCad retorno = Nfe.consultaCadastro(config, PessoaEnum.JURIDICA, \"XXX\", EstadosEnum.GO);\n//Valida o Retorno da Consulta Cadastro\nRetornoUtil.validaConsultaCadastro(retorno);\n//Resultado\nSystem.out.println();\nSystem.out.println(\"# Status: \" + retorno.getInfCons().getCStat() + \" - \" + retorno.getInfCons().getXMotivo());\nSystem.out.println();\nretorno.getInfCons().getInfCad().forEach( cadastro -&gt; {\nSystem.out.println(\"# Raz\u00e3o Social: \" + cadastro.getXNome());\nSystem.out.println(\"# Cnpj: \" + cadastro.getCNPJ());\nSystem.out.println(\"# Ie: \" + cadastro.getIE());\n});\n} catch (Exception e) {\nSystem.err.println();\nSystem.err.println(e.getMessage());\n}\n}\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/consulta-situacao/","title":"Consulta Situa\u00e7\u00e3o","text":"<p>Fun\u00e7\u00e3o para consultar a Situa\u00e7\u00e3o da NF-e na Sefaz.</p> ConsultaXmlTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;\nimport br.com.swconsultoria.nfe.schema_4.retConsSitNFe.TRetConsSitNFe;\n/**\n * @author Samuel Oliveira\n *\n */\npublic class ConsultaXmlTeste {\npublic static void main(String[] args) {\ntry {\n// Inicia As Configura\u00e7\u00f5es (1)\nConfiguracoesNfe config = Config.iniciaConfiguracoes();\n//Informe a chave a ser Consultada\nString chave = \"52190310732644000128550010000125531000125532\";\n//Efetua a consulta\nTRetConsSitNFe retorno = Nfe.consultaXml(config, chave, DocumentoEnum.NFE);\n//Resultado\nSystem.out.println();\nSystem.out.println(\"# Status: \" + retorno.getCStat() + \" - \" + retorno.getXMotivo());\n} catch (Exception e) {\nSystem.err.println();\nSystem.err.println(e.getMessage());\n}\n}\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/envio-epec/","title":"Envio Epec","text":""},{"location":"tutorial/envio-epec/#envio","title":"Envio","text":"EpecTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.Evento;\nimport br.com.swconsultoria.nfe.dom.EventoEpec;\nimport br.com.swconsultoria.nfe.dom.enuns.EstadosEnum;\nimport br.com.swconsultoria.nfe.schema.envEpec.TEnvEvento;\nimport br.com.swconsultoria.nfe.schema.envEpec.TRetEnvEvento;\nimport br.com.swconsultoria.nfe.util.EpecUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\nimport java.time.LocalDateTime;\n/**\n * @author Samuel Oliveira\n */\npublic class EpecTeste {\npublic static void main(String[] args) {\ntry {\n// Inicia As Configura\u00e7\u00f5es (1)\nConfiguracoesNfe config = Config.iniciaConfiguracoes();\n//Agora o evento pode aceitar uma lista de cancelaemntos para envio em Lote.\n//Para isso Foi criado o Objeto Epec\nEvento epec = new Evento();\n//Informe a chave da Epec\nepec.setChave(\"52190310732644000128550010000125491000125491\");\n//Informe o CNPJ do emitente\nepec.setCnpj(\"10732644000128\");\n//Informe a data do EPEC\nepec.setDataEvento(LocalDateTime.now());\n//Preenche os Dados do Evento EPEC\nEventoEpec eventoEpec = new EventoEpec();\neventoEpec.setCnpjDestinatario(\"X\");\neventoEpec.setvST(\"X\");\neventoEpec.setvNF(\"X\");\neventoEpec.setvICMS(\"X\");\neventoEpec.setTipoNF(\"X\");\neventoEpec.setIeEmitente(\"X\");\neventoEpec.setIeDestinatario(\"X\");\neventoEpec.setEstadoDestinatario(EstadosEnum.GO);\nepec.setEventoEpec(eventoEpec);\n//Monta o Evento de Cancelamento\nTEnvEvento enviEvento = EpecUtil.montaEpec(epec,config);\n//Envia Evento EPEC\nTRetEnvEvento retorno = Nfe.enviarEpec(config, enviEvento, true);\n//Valida o Retorno do Cancelamento\nRetornoUtil.validaEpec(retorno);\n//Resultado\nSystem.out.println();\nretorno.getRetEvento().forEach( resultado -&gt; {\nSystem.out.println(\"# Chave: \" + resultado.getInfEvento().getChNFe());\nSystem.out.println(\"# Status: \" + resultado.getInfEvento().getCStat() + \" - \" + resultado.getInfEvento().getXMotivo());\nSystem.out.println(\"# Protocolo: \" + resultado.getInfEvento().getNProt());\n});\n//Cria ProcEvento de Cacnelamento\nString proc = EpecUtil.criaProcEventoEpec(config, enviEvento, retorno);\nSystem.out.println();\nSystem.out.println(\"# ProcEvento : \" + proc);\n} catch (Exception e) {\nSystem.err.println();\nSystem.err.println(\"# Erro: \"+e.getMessage());\n}\n}\n}\n</code></pre>"},{"location":"tutorial/envio/","title":"Envio NF-e/NFC-e","text":""},{"location":"tutorial/envio/#envio-nf-e-sincrono","title":"Envio NF-e (S\u00edncrono)","text":"EnvioNfeTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.AmbienteEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.EstadosEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.StatusEnum;\nimport br.com.swconsultoria.nfe.exception.NfeException;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.*;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.*;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.COFINS;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.ICMS;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.PIS;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Prod;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Total.ICMSTot;\nimport br.com.swconsultoria.nfe.schema_4.retConsReciNFe.TRetConsReciNFe;\nimport br.com.swconsultoria.nfe.util.ChaveUtil;\nimport br.com.swconsultoria.nfe.util.ConstantesUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\nimport br.com.swconsultoria.nfe.util.XmlNfeUtil;\nimport javax.xml.bind.JAXBElement;\nimport javax.xml.namespace.QName;\nimport java.time.LocalDateTime;\nimport java.util.Collections;\nimport java.util.List;\n/**\n * @author Samuel Oliveira\n *\n */\npublic class EnvioNfeTeste {\npublic static void main(String[] args) {\ntry {\n// Inicia As Configura\u00e7\u00f5es (1)\nConfiguracoesNfe config = Config.iniciaConfiguracoes();\n//Informe o Numero da NFe\nint numeroNfe = XXX;\n//Informe o CNPJ do Emitente da NFe\nString cnpj = \"XXX\";\n//Informe a data de Emissao da NFe\nLocalDateTime dataEmissao = LocalDateTime.now();\n//Informe o cnf da NFe com 8 digitos\nString cnf = ChaveUtil.completarComZerosAEsquerda(String.valueOf(numeroNfe), 8);\n//Informe o modelo da NFe\nString modelo = DocumentoEnum.NFE.getModelo();\n//Informe a Serie da NFe\nint serie = 1;\n//Informe o tipo de Emissao da NFe\nString tipoEmissao = \"1\";\n// MontaChave a NFe\nChaveUtil chaveUtil = new ChaveUtil(config.getEstado(), cnpj, modelo, serie, numeroNfe, tipoEmissao, cnf, dataEmissao);\nString chave = chaveUtil.getChaveNF();\nString cdv = chaveUtil.getDigitoVerificador();\nInfNFe infNFe = new InfNFe();\ninfNFe.setId(chave);\ninfNFe.setVersao(ConstantesUtil.VERSAO.NFE);\n//Preenche IDE\ninfNFe.setIde(preencheIde(config, cnf, numeroNfe, tipoEmissao, modelo, serie, cdv, dataEmissao));\n//Preenche Emitente\ninfNFe.setEmit(preencheEmitente(config, cnpj));\n//Preenche o Destinatario\ninfNFe.setDest(preencheDestinatario());\n//Preenche os dados do Produto da Nfe e adiciona a Lista\ninfNFe.getDet().addAll(preencheDet());\n//Preenche totais da NFe\ninfNFe.setTotal(preencheTotal());\n//Preenche os dados de Transporte\ninfNFe.setTransp(preencheTransporte());\n// Preenche dados Pagamento\ninfNFe.setPag(preenchePag());\nTNFe nfe = new TNFe();\nnfe.setInfNFe(infNFe);\n// Monta EnviNfe\nTEnviNFe enviNFe = new TEnviNFe();\nenviNFe.setVersao(ConstantesUtil.VERSAO.NFE);\nenviNFe.setIdLote(\"1\");\nenviNFe.setIndSinc(\"1\");\nenviNFe.getNFe().add(nfe);\n// Monta e Assina o XML\nenviNFe = Nfe.montaNfe(config, enviNFe, true);\n// Envia a Nfe para a Sefaz\nTRetEnviNFe retorno = Nfe.enviarNfe(config, enviNFe, DocumentoEnum.NFE);\n//Valida se o Retorno \u00e9 Assincrono\nif (RetornoUtil.isRetornoAssincrono(retorno)) {\n//Pega o Recibo\nString recibo = retorno.getInfRec().getNRec();\nint tentativa = 0;\nTRetConsReciNFe retornoNfe = null;\n//Define Numero de tentativas que ir\u00e1 tentar a Consulta\nwhile (tentativa &lt; 15) {\nretornoNfe = Nfe.consultaRecibo(config, recibo, DocumentoEnum.NFE);\nif (retornoNfe.getCStat().equals(StatusEnum.LOTE_EM_PROCESSAMENTO.getCodigo())) {\nSystem.out.println(\"INFO: Lote Em Processamento, vai tentar novamente apos 1 Segundo.\");\nThread.sleep(1000);\ntentativa++;\n} else {\nbreak;\n}\n}\nRetornoUtil.validaAssincrono(retornoNfe);\nSystem.out.println();\nSystem.out.println(\"# Status: \" + retornoNfe.getProtNFe().get(0).getInfProt().getCStat() + \" - \" + retornoNfe.getProtNFe().get(0).getInfProt().getXMotivo());\nSystem.out.println(\"# Protocolo: \" + retornoNfe.getProtNFe().get(0).getInfProt().getNProt());\nSystem.out.println(\"# XML Final: \" + XmlNfeUtil.criaNfeProc(enviNFe, retornoNfe.getProtNFe().get(0)));\n} else {\n//Se for else o Retorno \u00e9 Sincrono\n//Valida Retorno Sincrono\nRetornoUtil.validaSincrono(retorno);\nSystem.out.println();\nSystem.out.println(\"# Status: \" + retorno.getProtNFe().getInfProt().getCStat()  + \" - \" + retorno.getProtNFe().getInfProt().getXMotivo());\nSystem.out.println(\"# Protocolo: \" + retorno.getProtNFe().getInfProt().getNProt());\nSystem.out.println(\"# Xml Final :\" + XmlNfeUtil.criaNfeProc(enviNFe, retorno.getProtNFe()));\n}\n} catch (Exception e) {\nSystem.err.println();\nSystem.err.println(\"# Erro: \" + e.getMessage());\n}\n}\n/**\n     * Preenche o IDE\n     * @param config\n     * @param cnf\n     * @param numeroNfe\n     * @param tipoEmissao\n     * @param cDv\n     * @param dataEmissao\n     * @return\n     * @throws NfeException\n     */\nprivate static Ide preencheIde(ConfiguracoesNfe config, String cnf, int numeroNfe, String tipoEmissao, String modelo, int serie, String cDv, LocalDateTime dataEmissao) throws NfeException {\nIde ide = new Ide();\nide.setCUF(config.getEstado().getCodigoIbge());\nide.setCNF(cnf);\nide.setNatOp(\"NOTA FISCAL CONSUMIDOR ELETRONICA\");\nide.setMod(modelo);\nide.setSerie(String.valueOf(serie));\nide.setNNF(String.valueOf(numeroNfe));\nide.setDhEmi(XmlNfeUtil.dataNfe(dataEmissao));\nide.setTpNF(\"1\");\nide.setIdDest(\"1\");\nide.setCMunFG(\"5219753\");\nide.setTpImp(\"1\");\nide.setTpEmis(tipoEmissao);\nide.setCDV(cDv);\nide.setTpAmb(config.getAmbiente().getCodigo());\nide.setFinNFe(\"1\");\nide.setIndFinal(\"1\");\nide.setIndPres(\"1\");\nide.setProcEmi(\"0\");\nide.setVerProc(\"1.0\");\nreturn ide;\n}\n/**\n     * Preenche o Emitente da Nfe\n     * @param config\n     * @param cnpj\n     * @return\n     */\nprivate static Emit preencheEmitente(ConfiguracoesNfe config, String cnpj) {\nEmit emit = new Emit();\nemit.setCNPJ(cnpj);\nemit.setXNome(\"XXXX\");\nTEnderEmi enderEmit = new TEnderEmi();\nenderEmit.setXLgr(\"AV SANTO ANTONIO &amp; cia\");\nenderEmit.setNro(\"0\");\nenderEmit.setXCpl(\"QD 17 LT 01-02-03\");\nenderEmit.setXBairro(\"PQ STO ANTONIO\");\nenderEmit.setCMun(\"5219753\");\nenderEmit.setXMun(\"SANTO ANTONIO DO DESCOBERTO\");\nenderEmit.setUF(TUfEmi.valueOf(config.getEstado().toString()));\nenderEmit.setCEP(\"72900000\");\nenderEmit.setCPais(\"1058\");\nenderEmit.setXPais(\"Brasil\");\nenderEmit.setFone(\"6233215175\");\nemit.setEnderEmit(enderEmit);\nemit.setIE(\"XXX\");\nemit.setCRT(\"3\");\nreturn emit;\n}\n/**\n     * Preenche o Destinatario da NFe\n     * @return\n     */\nprivate static Dest preencheDestinatario() {\nDest dest = new Dest();\ndest.setCNPJ(\"XXX\");\ndest.setXNome(\"NF-E EMITIDA EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL\");\nTEndereco enderDest = new TEndereco();\nenderDest.setXLgr(\"Rua: Teste\");\nenderDest.setNro(\"0\");\nenderDest.setXBairro(\"TESTE\");\nenderDest.setCMun(\"4109708\");\nenderDest.setXMun(\"IBAITI\");\nenderDest.setUF(TUf.valueOf(\"PR\"));\nenderDest.setCEP(\"84900000\");\nenderDest.setCPais(\"1058\");\nenderDest.setXPais(\"Brasil\");\nenderDest.setFone(\"4845454545\");\ndest.setEnderDest(enderDest);\ndest.setEmail(\"teste@test\");\ndest.setIndIEDest(\"9\");\nreturn dest;\n}\n/**\n     * Preenche Det Nfe\n     */\nprivate static List&lt;Det&gt; preencheDet() {\n//O Preenchimento deve ser feito por produto, Ent\u00e3o deve ocorrer uma LIsta\nDet det = new Det();\n//O numero do Item deve seguir uma sequencia\ndet.setNItem(\"1\");\n// Preenche dados do Produto\ndet.setProd(preencheProduto());\n//Preenche dados do Imposto\ndet.setImposto(preencheImposto());\n//Retorna a Lista de Det\nreturn Collections.singletonList(det);\n}\n/**\n     * Preenche dados do Produto\n     * @return\n     */\nprivate static Prod preencheProduto() {\nProd prod = new Prod();\nprod.setCProd(\"7898480650104\");\nprod.setCEAN(\"7898480650104\");\nprod.setXProd(\"NOTA FISCAL EMITIDA EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL\");\nprod.setNCM(\"27101932\");\nprod.setCEST(\"0600500\");\nprod.setIndEscala(\"S\");\nprod.setCFOP(\"5405\");\nprod.setUCom(\"UN\");\nprod.setQCom(\"1.0000\");\nprod.setVUnCom(\"13.0000\");\nprod.setVProd(\"13.00\");\nprod.setCEANTrib(\"7898480650104\");\nprod.setUTrib(\"UN\");\nprod.setQTrib(\"1.0000\");\nprod.setVUnTrib(\"13.0000\");\nprod.setIndTot(\"1\");\nreturn prod;\n}\n/**\n     * Preenche dados do Imposto da Nfe\n     * @return\n     */\nprivate static Imposto preencheImposto() {\nImposto imposto = new Imposto();\nICMS icms = new ICMS();\nICMS.ICMS00 icms00 = new ICMS.ICMS00();\nicms00.setOrig(\"0\");\nicms00.setCST(\"00\");\nicms00.setModBC(\"0\");\nicms00.setVBC(\"13.00\");\nicms00.setPICMS(\"7.00\");\nicms00.setVICMS(\"0.91\");\nicms.setICMS00(icms00);\nPIS pis = new PIS();\nPISAliq pisAliq = new PISAliq();\npisAliq.setCST(\"01\");\npisAliq.setVBC(\"13.00\");\npisAliq.setPPIS(\"1.65\");\npisAliq.setVPIS(\"0.21\");\npis.setPISAliq(pisAliq);\nCOFINS cofins = new COFINS();\nCOFINSAliq cofinsAliq = new COFINSAliq();\ncofinsAliq.setCST(\"01\");\ncofinsAliq.setVBC(\"13.00\");\ncofinsAliq.setPCOFINS(\"7.60\");\ncofinsAliq.setVCOFINS(\"0.99\");\ncofins.setCOFINSAliq(cofinsAliq);\nimposto.getContent().add(new ObjectFactory().createTNFeInfNFeDetImpostoICMS(icms));\nimposto.getContent().add(new ObjectFactory().createTNFeInfNFeDetImpostoPIS(pis));\nimposto.getContent().add(new ObjectFactory().createTNFeInfNFeDetImpostoCOFINS(cofins));\nreturn imposto;\n}\n/**\n     * Prenche Total NFe\n     * @return\n     */\nprivate static Total preencheTotal() {\nTotal total = new Total();\nICMSTot icmstot = new ICMSTot();\nicmstot.setVBC(\"13.00\");\nicmstot.setVICMS(\"0.91\");\nicmstot.setVICMSDeson(\"0.00\");\nicmstot.setVFCP(\"0.00\");\nicmstot.setVFCPST(\"0.00\");\nicmstot.setVFCPSTRet(\"0.00\");\nicmstot.setVBCST(\"0.00\");\nicmstot.setVST(\"0.00\");\nicmstot.setVProd(\"13.00\");\nicmstot.setVFrete(\"0.00\");\nicmstot.setVSeg(\"0.00\");\nicmstot.setVDesc(\"0.00\");\nicmstot.setVII(\"0.00\");\nicmstot.setVIPI(\"0.00\");\nicmstot.setVIPIDevol(\"0.00\");\nicmstot.setVPIS(\"0.21\");\nicmstot.setVCOFINS(\"0.99\");\nicmstot.setVOutro(\"0.00\");\nicmstot.setVNF(\"13.00\");\ntotal.setICMSTot(icmstot);\nreturn total;\n}\n/**\n     * Preenche Transporte\n     * @return\n     */\nprivate static Transp preencheTransporte(){\nTransp transp = new Transp();\ntransp.setModFrete(\"9\");\nreturn transp;\n}\n/**\n     * Preenche dados Pagamento\n     * @return\n     */\nprivate static Pag preenchePag() {\nPag pag = new Pag();\nPag.DetPag detPag = new Pag.DetPag();\ndetPag.setTPag(\"01\");\ndetPag.setVPag(\"13.00\");\npag.getDetPag().add(detPag);\nreturn pag;\n}\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/envio/#envio-nfc-e-sincrono","title":"Envio NFC-e (S\u00edncrono)","text":"EnvioNfeXmlTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.*;\nimport br.com.swconsultoria.nfe.exception.NfeException;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.*;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.*;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.COFINS;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.COFINS.COFINSAliq;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.ICMS;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.PIS;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Imposto.PIS.PISAliq;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Det.Prod;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TNFe.InfNFe.Total.ICMSTot;\nimport br.com.swconsultoria.nfe.schema_4.retConsReciNFe.TRetConsReciNFe;\nimport br.com.swconsultoria.nfe.util.*;\nimport javax.xml.bind.JAXBElement;\nimport javax.xml.namespace.QName;\nimport java.security.NoSuchAlgorithmException;\nimport java.time.LocalDateTime;\nimport java.util.Collections;\nimport java.util.List;\n/**\n * @author Samuel Oliveira\n *\n */\npublic class EnvioNfceTeste {\npublic static void main(String[] args) {\ntry {\n// Inicia As Configura\u00e7\u00f5es (1)\nConfiguracoesNfe config = Config.iniciaConfiguracoes();\n//Informe o Numero da NFCe\nint numeroNFCe = XXX;\n//Informe o CNPJ do Emitente da NFCe\nString cnpj = \"XXX\";\n//Informe a data de Emissao da NFCe\nLocalDateTime dataEmissao = LocalDateTime.now();\n//Informe o cnf da NFCe com 8 digitos\nString cnf = ChaveUtil.completarComZerosAEsquerda(String.valueOf(numeroNFCe), 8);\n//Informe o modelo da NFCe\nString modelo = DocumentoEnum.NFCE.getModelo();\n//Informe a Serie da NFCe\nint serie = 1;\n//Informe o tipo de Emissao da NFCe\nString tipoEmissao = \"1\";\n//Informe o idToken\nString idToken = \"XXX\";\n//Informe o CSC da NFCe\nString csc = \"XXX\";\n// MontaChave a NFCe\nChaveUtil chaveUtil = new ChaveUtil(config.getEstado(), cnpj, modelo, serie, numeroNFCe, tipoEmissao, cnf, dataEmissao);\nString chave = chaveUtil.getChaveNF();\nString cdv = chaveUtil.getDigitoVerificador();\nInfNFe infNFe = new InfNFe();\ninfNFe.setId(chave);\ninfNFe.setVersao(ConstantesUtil.VERSAO.NFE);\n//Preenche IDE\ninfNFe.setIde(preencheIde(config, cnf, numeroNFCe, tipoEmissao, modelo, serie, cdv, dataEmissao));\n//Preenche Emitente\ninfNFe.setEmit(preencheEmitente(config, cnpj));\n//Preenche o Destinatario\ninfNFe.setDest(preencheDestinatario());\n//Preenche os dados do Produto da NFCe e adiciona a Lista\ninfNFe.getDet().addAll(preencheDet());\n//Preenche totais da NFCe\ninfNFe.setTotal(preencheTotal());\n//Preenche os dados de Transporte\ninfNFe.setTransp(preencheTransporte());\n// Preenche dados Pagamento\ninfNFe.setPag(preenchePag());\nTNFe nfe = new TNFe();\nnfe.setInfNFe(infNFe);\n// Monta EnviNfe\nTEnviNFe enviNFe = new TEnviNFe();\nenviNFe.setVersao(ConstantesUtil.VERSAO.NFE);\nenviNFe.setIdLote(\"1\");\nenviNFe.setIndSinc(\"1\");\nenviNFe.getNFe().add(nfe);\n// Monta e Assina o XML\nenviNFe = Nfe.montaNfe(config, enviNFe, true);\n//Monta QRCode\nString qrCode = preencheQRCode(enviNFe,config,idToken,csc);\nTNFe.InfNFeSupl infNFeSupl = new TNFe.InfNFeSupl();\ninfNFeSupl.setQrCode(qrCode);\ninfNFeSupl.setUrlChave(WebServiceUtil.getUrl(config, DocumentoEnum.NFCE, ServicosEnum.URL_CONSULTANFCE));\nenviNFe.getNFe().get(0).setInfNFeSupl(infNFeSupl);\n// Envia a Nfe para a Sefaz\nTRetEnviNFe retorno = Nfe.enviarNfe(config, enviNFe, DocumentoEnum.NFCE);\n//Valida se o Retorno \u00e9 Assincrono\nif (RetornoUtil.isRetornoAssincrono(retorno)) {\n//Pega o Recibo\nString recibo = retorno.getInfRec().getNRec();\nint tentativa = 0;\nTRetConsReciNFe retornoNfe = null;\n//Define Numero de tentativas que ir\u00e1 tentar a Consulta\nwhile (tentativa &lt; 15) {\nretornoNfe = Nfe.consultaRecibo(config, recibo, DocumentoEnum.NFE);\nif (retornoNfe.getCStat().equals(StatusEnum.LOTE_EM_PROCESSAMENTO.getCodigo())) {\nSystem.out.println(\"INFO: Lote Em Processamento, vai tentar novamente apos 1 Segundo.\");\nThread.sleep(1000);\ntentativa++;\n} else {\nbreak;\n}\n}\nRetornoUtil.validaAssincrono(retornoNfe);\nSystem.out.println();\nSystem.out.println(\"# Status: \" + retornoNfe.getProtNFe().get(0).getInfProt().getCStat() + \" - \" + retornoNfe.getProtNFe().get(0).getInfProt().getXMotivo());\nSystem.out.println(\"# Protocolo: \" + retornoNfe.getProtNFe().get(0).getInfProt().getNProt());\nSystem.out.println(\"# XML Final: \" + XmlNfeUtil.criaNfeProc(enviNFe, retornoNfe.getProtNFe().get(0)));\n} else {\n//Se for else o Retorno \u00e9 Sincrono\n//Valida Retorno Sincrono\nRetornoUtil.validaSincrono(retorno);\nSystem.out.println();\nSystem.out.println(\"# Status: \" + retorno.getProtNFe().getInfProt().getCStat() + \" - \" + retorno.getProtNFe().getInfProt().getXMotivo());\nSystem.out.println(\"# Protocolo: \" + retorno.getProtNFe().getInfProt().getNProt());\nSystem.out.println(\"# Xml Final :\" + XmlNfeUtil.criaNfeProc(enviNFe, retorno.getProtNFe()));\n}\n} catch (Exception e) {\nSystem.err.println();\nSystem.err.println(\"# Erro: \" + e.getMessage());\n}\n}\n/**\n     * Preenche o IDE\n     * @param config\n     * @param cnf\n     * @param numeroNFCe\n     * @param tipoEmissao\n     * @param cDv\n     * @param dataEmissao\n     * @return\n     * @throws NfeException\n     */\nprivate static Ide preencheIde(ConfiguracoesNfe config, String cnf, int numeroNFCe, String tipoEmissao, String modelo, int serie, String cDv, LocalDateTime dataEmissao) throws NfeException {\nIde ide = new Ide();\nide.setCUF(config.getEstado().getCodigoIbge());\nide.setCNF(cnf);\nide.setNatOp(\"NOTA FISCAL CONSUMIDOR ELETRONICA\");\nide.setMod(modelo);\nide.setSerie(String.valueOf(serie));\nide.setNNF(String.valueOf(numeroNFCe));\nide.setDhEmi(XmlNfeUtil.dataNfe(dataEmissao));\nide.setTpNF(\"1\");\nide.setIdDest(\"1\");\nide.setCMunFG(\"5219753\");\nide.setTpImp(\"4\");\nide.setTpEmis(tipoEmissao);\nide.setCDV(cDv);\nide.setTpAmb(config.getAmbiente().getCodigo());\nide.setFinNFe(\"1\");\nide.setIndFinal(\"1\");\nide.setIndPres(\"1\");\nide.setProcEmi(\"0\");\nide.setVerProc(\"1.0\");\nreturn ide;\n}\n/**\n     * Preenche o Emitente da NFCe\n     * @param config\n     * @param cnpj\n     * @return\n     */\nprivate static Emit preencheEmitente(ConfiguracoesNfe config, String cnpj) {\nEmit emit = new Emit();\nemit.setCNPJ(cnpj);\nemit.setXNome(\"XXX\");\nTEnderEmi enderEmit = new TEnderEmi();\nenderEmit.setXLgr(\"AV SANTO ANTONIO e cia\");\nenderEmit.setNro(\"0\");\nenderEmit.setXCpl(\"QD 17 LT 01-02-03\");\nenderEmit.setXBairro(\"PQ STO ANTONIO\");\nenderEmit.setCMun(\"5219753\");\nenderEmit.setXMun(\"SANTO ANTONIO DO DESCOBERTO\");\nenderEmit.setUF(TUfEmi.valueOf(config.getEstado().toString()));\nenderEmit.setCEP(\"72900000\");\nenderEmit.setCPais(\"1058\");\nenderEmit.setXPais(\"Brasil\");\nenderEmit.setFone(\"6233215175\");\nemit.setEnderEmit(enderEmit);\nemit.setIE(\"XXX\");\nemit.setCRT(\"3\");\nreturn emit;\n}\n/**\n     * Preenche o Destinatario da NFCe\n     * @return\n     */\nprivate static Dest preencheDestinatario() {\nDest dest = new Dest();\ndest.setCNPJ(\"XXX\");\ndest.setXNome(\"NF-E EMITIDA EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL\");\nTEndereco enderDest = new TEndereco();\nenderDest.setXLgr(\"Rua: Teste\");\nenderDest.setNro(\"0\");\nenderDest.setXBairro(\"TESTE\");\nenderDest.setCMun(\"4109708\");\nenderDest.setXMun(\"IBAITI\");\nenderDest.setUF(TUf.valueOf(\"PR\"));\nenderDest.setCEP(\"84900000\");\nenderDest.setCPais(\"1058\");\nenderDest.setXPais(\"Brasil\");\nenderDest.setFone(\"4845454545\");\ndest.setEnderDest(enderDest);\ndest.setEmail(\"teste@test\");\ndest.setIndIEDest(\"9\");\nreturn dest;\n}\n/**\n     * Preenche Det NFCe\n     */\nprivate static List&lt;Det&gt; preencheDet() {\n//O Preenchimento deve ser feito por produto, Ent\u00e3o deve ocorrer uma LIsta\nDet det = new Det();\n//O numero do Item deve seguir uma sequencia\ndet.setNItem(\"1\");\n// Preenche dados do Produto\ndet.setProd(preencheProduto());\n//Preenche dados do Imposto\ndet.setImposto(preencheImposto());\n//Retorna a Lista de Det\nreturn Collections.singletonList(det);\n}\n/**\n     * Preenche dados do Produto\n     * @return\n     */\nprivate static Prod preencheProduto() {\nProd prod = new Prod();\nprod.setCProd(\"7898480650104\");\nprod.setCEAN(\"7898480650104\");\nprod.setXProd(\"NOTA FISCAL EMITIDA EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL\");\nprod.setNCM(\"27101932\");\nprod.setCEST(\"0600500\");\nprod.setIndEscala(\"S\");\nprod.setCFOP(\"5102\");\nprod.setUCom(\"UN\");\nprod.setQCom(\"1.0000\");\nprod.setVUnCom(\"13.0000\");\nprod.setVProd(\"13.00\");\nprod.setCEANTrib(\"7898480650104\");\nprod.setUTrib(\"UN\");\nprod.setQTrib(\"1.0000\");\nprod.setVUnTrib(\"13.0000\");\nprod.setIndTot(\"1\");\nreturn prod;\n}\n/**\n     * Preenche dados do Imposto da NFCe\n     * @return\n     */\nprivate static Imposto preencheImposto() {\nImposto imposto = new Imposto();\nICMS icms = new ICMS();\nICMS.ICMS00 icms00 = new ICMS.ICMS00();\nicms00.setOrig(\"0\");\nicms00.setCST(\"00\");\nicms00.setModBC(\"0\");\nicms00.setVBC(\"13.00\");\nicms00.setPICMS(\"7.00\");\nicms00.setVICMS(\"0.91\");\nicms.setICMS00(icms00);\nPIS pis = new PIS();\nPISAliq pisAliq = new PISAliq();\npisAliq.setCST(\"01\");\npisAliq.setVBC(\"13.00\");\npisAliq.setPPIS(\"1.65\");\npisAliq.setVPIS(\"0.21\");\npis.setPISAliq(pisAliq);\nCOFINS cofins = new COFINS();\nCOFINSAliq cofinsAliq = new COFINSAliq();\ncofinsAliq.setCST(\"01\");\ncofinsAliq.setVBC(\"13.00\");\ncofinsAliq.setPCOFINS(\"7.60\");\ncofinsAliq.setVCOFINS(\"0.99\");\ncofins.setCOFINSAliq(cofinsAliq);\nJAXBElement&lt;ICMS&gt; icmsElement = new JAXBElement&lt;ICMS&gt;(new QName(\"ICMS\"), ICMS.class, icms);\nimposto.getContent().add(icmsElement);\nJAXBElement&lt;PIS&gt; pisElement = new JAXBElement&lt;PIS&gt;(new QName(\"PIS\"), PIS.class, pis);\nimposto.getContent().add(pisElement);\nJAXBElement&lt;COFINS&gt; cofinsElement = new JAXBElement&lt;COFINS&gt;(new QName(\"COFINS\"), COFINS.class, cofins);\nimposto.getContent().add(cofinsElement);\nreturn imposto;\n}\n/**\n     * Prenche Total NFCe\n     * @return\n     */\nprivate static Total preencheTotal() {\nTotal total = new Total();\nICMSTot icmstot = new ICMSTot();\nicmstot.setVBC(\"13.00\");\nicmstot.setVICMS(\"0.91\");\nicmstot.setVICMSDeson(\"0.00\");\nicmstot.setVFCP(\"0.00\");\nicmstot.setVFCPST(\"0.00\");\nicmstot.setVFCPSTRet(\"0.00\");\nicmstot.setVBCST(\"0.00\");\nicmstot.setVST(\"0.00\");\nicmstot.setVProd(\"13.00\");\nicmstot.setVFrete(\"0.00\");\nicmstot.setVSeg(\"0.00\");\nicmstot.setVDesc(\"0.00\");\nicmstot.setVII(\"0.00\");\nicmstot.setVIPI(\"0.00\");\nicmstot.setVIPIDevol(\"0.00\");\nicmstot.setVPIS(\"0.21\");\nicmstot.setVCOFINS(\"0.99\");\nicmstot.setVOutro(\"0.00\");\nicmstot.setVNF(\"13.00\");\ntotal.setICMSTot(icmstot);\nreturn total;\n}\n/**\n     * Preenche Transporte\n     * @return\n     */\nprivate static Transp preencheTransporte() {\nTransp transp = new Transp();\ntransp.setModFrete(\"9\");\nreturn transp;\n}\n/**\n     * Preenche dados Pagamento\n     * @return\n     */\nprivate static Pag preenchePag() {\nPag pag = new Pag();\nPag.DetPag detPag = new Pag.DetPag();\ndetPag.setTPag(\"01\");\ndetPag.setVPag(\"13.00\");\npag.getDetPag().add(detPag);\nreturn pag;\n}\n/**\n     * Preenche QRCode\n     * @param enviNFe\n     * @param config\n     * @param idToken\n     * @param csc\n     * @return\n     * @throws NfeException\n     * @throws NoSuchAlgorithmException\n     */\nprivate static String preencheQRCode(TEnviNFe enviNFe, ConfiguracoesNfe config, String idToken, String csc) throws NfeException, NoSuchAlgorithmException {\n//QRCODE EMISAO ONLINE\nreturn NFCeUtil.getCodeQRCode(\nenviNFe.getNFe().get(0).getInfNFe().getId().substring(3),\nconfig.getAmbiente().getCodigo(),\nidToken,\ncsc,\nWebServiceUtil.getUrl(config,DocumentoEnum.NFCE, ServicosEnum.URL_QRCODE));\n//QRCODE EMISSAO OFFLINE\n//        return NFCeUtil.getCodeQRCodeContingencia(\n//                enviNFe.getNFe().get(0).getInfNFe().getId().substring(3),\n//                config.getAmbiente().getCodigo(),\n//                enviNFe.getNFe().get(0).getInfNFe().getIde().getDhEmi(),\n//                enviNFe.getNFe().get(0).getInfNFe().getTotal().getICMSTot().getVNF(),\n//                Base64.getEncoder().encodeToString(enviNFe.getNFe().get(0).getSignature().getSignedInfo().getReference().getDigestValue()),\n//                idToken,\n//                csc,\n//                WebServiceUtil.getUrl(config, DocumentoEnum.NFCE, ServicosEnum.URL_QRCODE));\n}\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/envio/#envio-nf-e-com-arquivo-xml","title":"Envio NF-e com arquivo XML","text":"EnvioNfeXmlTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.StatusEnum;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TEnviNFe;\nimport br.com.swconsultoria.nfe.schema_4.enviNFe.TRetEnviNFe;\nimport br.com.swconsultoria.nfe.schema_4.retConsReciNFe.TRetConsReciNFe;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\nimport br.com.swconsultoria.nfe.util.XmlNfeUtil;\n/**\n * @author Samuel Oliveira\n *\n */\npublic class EnvioNfeXmlTeste {\npublic static void main(String[] args) {\ntry {\n// Inicia As Configura\u00e7\u00f5es (1)\nConfiguracoesNfe config = Config.iniciaConfiguracoes();\nString caminhoXML = \"d:/teste/nfe.xml\";\n// Le Xml do Arquivo\nString xml = XmlNfeUtil.leXml(caminhoXML);\nTEnviNFe enviNFe = XmlNfeUtil.xmlToObject(xml, TEnviNFe.class);\n// Monta e Assina o XML\nenviNFe = Nfe.montaNfe(config, enviNFe, true);\n// Envia a Nfe para a Sefaz\nTRetEnviNFe retorno = Nfe.enviarNfe(config, enviNFe, DocumentoEnum.NFE);\n//Valida se o Retorno \u00e9 Assincrono\nif (RetornoUtil.isRetornoAssincrono(retorno)) {\n//Pega o Recibo\nString recibo = retorno.getInfRec().getNRec();\nint tentativa = 0;\nTRetConsReciNFe retornoNfe = null;\n//Define Numero de tentativas que ir\u00e1 tentar a Consulta\nwhile (tentativa &lt; 15) {\nretornoNfe = Nfe.consultaRecibo(config, recibo, DocumentoEnum.NFE);\nif (retornoNfe.getCStat().equals(StatusEnum.LOTE_EM_PROCESSAMENTO.getCodigo())) {\nSystem.out.println(\"INFO: Lote Em Processamento, vai tentar novamente apos 1 Segundo.\");\nThread.sleep(1000);\ntentativa++;\n} else {\nbreak;\n}\n}\nRetornoUtil.validaAssincrono(retornoNfe);\nSystem.out.println();\nSystem.out.println(\"# Status: \" + retornoNfe.getProtNFe().get(0).getInfProt().getCStat() + \" - \" + retornoNfe.getProtNFe().get(0).getInfProt().getXMotivo());\nSystem.out.println(\"# Protocolo: \" + retornoNfe.getProtNFe().get(0).getInfProt().getNProt());\nSystem.out.println(\"# XML Final: \" + XmlNfeUtil.criaNfeProc(enviNFe, retornoNfe.getProtNFe().get(0)));\n} else {\n//Se for else o Retorno \u00e9 Sincrono\n//Valida Retorno Sincrono\nRetornoUtil.validaSincrono(retorno);\nSystem.out.println();\nSystem.out.println(\"# Status: \" + retorno.getProtNFe().getInfProt().getCStat() + \" - \" + retorno.getProtNFe().getInfProt().getXMotivo());\nSystem.out.println(\"# Protocolo: \" + retorno.getProtNFe().getInfProt().getNProt());\nSystem.out.println(\"# Xml Final : \" + XmlNfeUtil.criaNfeProc(enviNFe, retorno.getProtNFe()));\n}\n} catch (Exception e) {\nSystem.err.println();\nSystem.err.println(\"# Erro: \" + e.getMessage());\n}\n}\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/inutilizacao/","title":"Inutiliza\u00e7\u00e3o","text":"<p>Fun\u00e7\u00e3o para Inutilizar faixa de n\u00fameros da NF-e.</p>"},{"location":"tutorial/inutilizacao/#enviar-evento-de-inutilizacao","title":"Enviar evento de Inutiliza\u00e7\u00e3o","text":"InutilizarTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.AmbienteEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;\nimport br.com.swconsultoria.nfe.dom.enuns.EstadosEnum;\nimport br.com.swconsultoria.nfe.schema_4.inutNFe.TInutNFe;\nimport br.com.swconsultoria.nfe.schema_4.inutNFe.TRetInutNFe;\nimport br.com.swconsultoria.nfe.util.InutilizacaoUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\nimport java.time.LocalDateTime;\n/**\n * @author Samuel Oliveira\n *\n */\npublic class InutilizarTeste {\npublic static void main(String[] args) {\ntry {\n/// Inicia As Configura\u00e7\u00f5es (1)\nConfiguracoesNfe config = ConfiguracaoTeste.iniciaConfiguracoes(EstadosEnum.GO, AmbienteEnum.HOMOLOGACAO);\n//Informe o CNPJ do emitente\nString cnpj = \"XXX\";\n//Informe a serie\nint serie = 1;\n//Informe a numeracao Inicial\nint numeroInicial = XXX;\n//Informe a numeracao Final\nint numeroFinal = XXX;\n//Informe a Justificativa da Inutilizacao\nString justificativa = \"Teste de Inutiliza\u00e7\u00e3o\";\n//Informe a data do Cancelamento\nLocalDateTime dataCancelamento = LocalDateTime.now();\n//MOnta Inutiliza\u00e7\u00e3o\nTInutNFe inutNFe = InutilizacaoUtil.montaInutilizacao(DocumentoEnum.NFE,cnpj,serie,numeroInicial,numeroFinal,justificativa,dataCancelamento,config);\n//Envia Inutiliza\u00e7\u00e3o\nTRetInutNFe retorno = Nfe.inutilizacao(config,inutNFe, DocumentoEnum.NFE,true);\n//Valida o Retorno da Inutiliza\u00e7\u00e3o\nRetornoUtil.validaInutilizacao(retorno);\n//Resultado\nSystem.out.println();\nSystem.out.println(\"# Status: \" + retorno.getInfInut().getCStat() + \" - \" + retorno.getInfInut().getXMotivo());\nSystem.out.println(\"# Protocolo: \" + retorno.getInfInut().getNProt());\n//Cria ProcEvento da Inutiliza\u00e7\u00e3o\nString proc = InutilizacaoUtil.criaProcInutilizacao(config,inutNFe, retorno);\nSystem.out.println();\nSystem.out.println(\"# ProcInutilizacao : \" + proc);\n} catch (Exception e) {\nSystem.err.println(e.getMessage());\n}\n}\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/manifestacao/","title":"Manifesta\u00e7\u00e3o","text":"<p>Fun\u00e7\u00e3o para Manifestar a NF-e Recebida na Sefaz.</p>"},{"location":"tutorial/manifestacao/#enviar-evento-de-manifestacao","title":"Enviar evento de Manifesta\u00e7\u00e3o","text":"ManifestacaoTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.Evento;\nimport br.com.swconsultoria.nfe.dom.enuns.ManifestacaoEnum;\nimport br.com.swconsultoria.nfe.schema.envConfRecebto.TEnvEvento;\nimport br.com.swconsultoria.nfe.schema.envConfRecebto.TRetEnvEvento;\nimport br.com.swconsultoria.nfe.util.ManifestacaoUtil;\nimport br.com.swconsultoria.nfe.util.RetornoUtil;\nimport java.time.LocalDateTime;\n/**\n * @author Samuel Oliveira\n */\npublic class ManifestacaoTeste {\npublic static void main(String[] args) {\ntry {\n// Inicia As Configura\u00e7\u00f5es (1)\nConfiguracoesNfe config = Config.iniciaConfiguracoes();\n//Agora o evento pode aceitar uma lista de Manifest\u00e7\u00f5es para envio em Lote.\n//Para isso Foi criado o Objeto Manifestada\nEvento manifesta = new Evento();\n//Informe a chave da Nota a ser Manifestada\nmanifesta.setChave(\"ZZZ\");\n//Informe o CNPJ do emitente\nmanifesta.setCnpj(\"XXX\");\n//Caso o Tipo de manifesta\u00e7\u00e3o seja OPERA\u00c7\u00c2O N\u00e3o REALIZADA, Informe o Motivo do Manifestacao\nmanifesta.setMotivo(\"Teste Opera\u00e7\u00e3o N\u00e3o Realizada\");\n//Informe a data do Manifestacao\nmanifesta.setDataEvento(LocalDateTime.now());\n//Informe o Tipo da Manifesta\u00e7\u00e3o\nmanifesta.setTipoManifestacao(ManifestacaoEnum.CIENCIA_DA_OPERACAO);\n//Monta o Evento de Manifesta\u00e7\u00e3o\nTEnvEvento enviEvento = ManifestacaoUtil.montaManifestacao(manifesta, config);\n//Envia o Evento de Manifesta\u00e7\u00e3o\nTRetEnvEvento retorno = Nfe.manifestacao(config, enviEvento, true);\n//Valida o Retorno do Cancelamento\nRetornoUtil.validaManifestacao(retorno);\n//Resultado\nSystem.out.println();\nretorno.getRetEvento().forEach( resultado -&gt; {\nSystem.out.println(\"# Chave: \" + resultado.getInfEvento().getChNFe());\nSystem.out.println(\"# Status: \" + resultado.getInfEvento().getCStat() + \" - \" + resultado.getInfEvento().getXMotivo());\nSystem.out.println(\"# Protocolo: \" + resultado.getInfEvento().getNProt());\n});\n//Cria ProcEvento de Manifestacao\nString proc = ManifestacaoUtil.criaProcEventoManifestacao(config, enviEvento, retorno.getRetEvento().get(0));\nSystem.out.println();\nSystem.out.println(\"# ProcEvento : \" + proc);\n} catch (Exception e) {\nSystem.err.println();\nSystem.err.println(\"# Erro: \"+e.getMessage());\n}\n}\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"},{"location":"tutorial/status-servico/","title":"Status de Servi\u00e7o","text":"<p>Fun\u00e7\u00e3o para consultar o Status de Servi\u00e7o Da Sefaz.</p> StatusServicoTeste.java<pre><code>import br.com.swconsultoria.nfe.Nfe;\nimport br.com.swconsultoria.nfe.dom.ConfiguracoesNfe;\nimport br.com.swconsultoria.nfe.dom.enuns.DocumentoEnum;\nimport br.com.swconsultoria.nfe.schema_4.retConsStatServ.TRetConsStatServ;\n/**\n * @author Samuel Oliveira\n */\npublic class StatusServicoTeste {\npublic static void main(String[] args) {\ntry {\n// Inicia As Configura\u00e7\u00f5es (1)\nConfiguracoesNfe config = Config.iniciaConfiguracoes();\n//Efetua Consulta\nTRetConsStatServ retorno = Nfe.statusServico(config, DocumentoEnum.NFE);\n//Resultado\nSystem.out.println();\nSystem.out.println(\"# Status: \" + retorno.getCStat() + \" - \" + retorno.getXMotivo());\n} catch (Exception e) {\nSystem.err.println(\"# Erro: \"+e.getMessage());\n}\n}\n}\n</code></pre> <ol> <li>Acesse o menu Configura\u00e7\u00f5es (Certificado)</li> </ol>"}]}